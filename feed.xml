<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blah-log</title>
    <description>My blah-blah logs about life and dream.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 02 Apr 2016 21:20:35 +0800</pubDate>
    <lastBuildDate>Sat, 02 Apr 2016 21:20:35 +0800</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      
      <item>
        <title>由因果关系想到人类知识的限制</title>
        <description>&lt;p&gt;什么是因果呢？人们从经验中体验到许多事物总在时间上组合地出现。当事件甲发生后，总有事件乙随之发生，当这种现象重复多次被人们认定为必然之后，在人们的观念中事件甲乙也就产生了联系：甲为因，乙为果。实质上，这是对事物在时间层面关系上的抽象。&lt;/p&gt;

&lt;p&gt;人类的天性是万事寻个因由，尤其在看重结果事件乙的影响时，希望能摸清其中原因并掌控事件乙。这种时间上的追问回溯是人类区别于动物最大的特质。&lt;!--excerpt_separator--&gt;再来看看因果关系，甲乙构成因果需要满足的条件应该是：一、甲是乙发生的必要条件。这也就是说，甲不存在则乙绝不会发生，但甲即使存在并不一定意味着乙的发生。乙发生的因由包括但不止于事件甲。二、甲先于乙发生。时间不可逆，加上因果本身这种由果回溯的思维特点决定了因发生在果前。&lt;/p&gt;

&lt;p&gt;这些是我们逻辑上对因果的认识，但这些到底是发明还是发现呢？我们是否在一厢情愿地发明了一种事物间的“连接”来解释那些看似必然的组合，而并非发现事物联系本质呢？是否真的有因果这回事呢？苹果从树上熟透落下一千次，而第一千零一次是否仍然会落在地上，我们从经验中总结并虚构出的经典物理告诉我们存在“万有引力”，可是这或许只是满足人类对疑问的一种解答而已，是事物本质的状况嘛？被人类称为“万有引力”的那种东西会在某一天不再起作用么？&lt;/p&gt;

&lt;p&gt;许多哲学家并不认为这种类似的问题可以解答，因为已经超出我们感知世界的范围，我们的感知处在时间和空间这两种感知层面的禁锢中（除了时间和空间上的感知，外界还透过什么形式给我们感官上的信息？）。我们对信息的处理能力有限，再加上现有的视觉、听觉等感官感受到的信息也实在残缺，在这样的条件下，我们如何能得到一个真实的世界？对于一个没有答案的疑问来说，自然，所有表面上行得通的方案，都可以成为暂时的真理。用神话宗教解释世界是暂时的、经典物理力学是暂时的、相对论也是暂时的，暂时意味着并非真理。然而，意识到这些有什么用呢？&lt;/p&gt;

&lt;p&gt;一方面我们永远不该满足当前的任何一套理论，很多情况下，理论其实就是一套工具，当我们信息视角改变，信息积累更丰富，遇到更多未知情形时，或许就该更替头脑里的理论了。探索可能永远都没有止境。第二，既然我们信以为真的理论都有可能随时变化或者崩溃，那么我们眼前感受的世界或许真的就是无法捕捉的。如果我们没有能力认识世界本质，那么我们只需要保持常新眼光看待世界，毕竟这个世界与我们有接触的才是真正影响我们的，对我们丝毫没有影响的那部分也就与我们无关了。常新的眼光不需要规则，它强调任何可能性。最后，怀疑的意义就是突破和进步。&lt;/p&gt;

&lt;p&gt;既然人类是宇宙的一部分，那么宇宙运动的法则是否同样存在人脑中呢？人脑中是否存在先知的规律，这些规律与生俱来、坚定不移且不依赖于来自外界的感受和经验。休谟给出过解答，他认为可靠的知识分为两类，其中几何和逻辑就是这样不依赖于外界的知识，可以不通我们经验感受而来。而其实，我们大脑中的逻辑其实依然被时间和空间的认知层面所限制。类似于，逻辑这种思维运算在时空经验知识集合上作自闭包运算，那么得到的知识永远也超不出时空范围。由此，我们察觉到，认识世界本质的关键在于突破认知，突破认知的关键是探寻人类时空感知以外的能力。那么出了时间和空间，究竟还有什么层面上的感知呢？这种感知甚至无法想象。无法联想的话，是否也在证明这些事实：我们无法创造新的感知层次，这个世界允许你感知哪些你才能感受哪些，它掌握绝对控制权；我们的知识注定有所界限。&lt;/p&gt;

&lt;p&gt;所有时空上的经验知识经过思维的逻辑处理也只能基于时空的概念上，不可能逃出时空概念的基质。要产生突破的认知层面，那么在现有的感官经验无法改变的条件下，或许只能放弃逻辑，把一切时间上的因果和空间上的秩序颠倒打乱，或许这样才能产生跃层的新知识。或许，真正的天才就是那些玩弄逻辑、蔑视逻辑又能善用头脑的人吧。&lt;/p&gt;
</description>
        
          <description>&lt;p&gt;什么是因果呢？人们从经验中体验到许多事物总在时间上组合地出现。当事件甲发生后，总有事件乙随之发生，当这种现象重复多次被人们认定为必然之后，在人们的观念中事件甲乙也就产生了联系：甲为因，乙为果。实质上，这是对事物在时间层面关系上的抽象。&lt;/p&gt;

</description>
        
        <pubDate>Sun, 20 Mar 2016 00:00:00 +0800</pubDate>
        <link>/blog/causation/</link>
        <guid isPermaLink="true">/blog/causation/</guid>
        
        <category>哲学</category>
        
        
      </item>
      
    
      
      <item>
        <title>札记－《尼采：在世纪的转折点上》中关于自我发现</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;“自我”的发现&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;自中世纪的丧钟敲响以来，西方人的精神上似乎经历了两次重大发现：第一次是人的发现，第二次是“自我”的发现。文艺复兴时代，当神的虚幻光芒渐渐熄灭，人的太阳升起了，“做你自己想做的事！”，冻结了一千年的尘世生活解冻了，活动吧，创造吧，尽情地享受吧。后来，一种新的惘然若失之感在人们心中滋生。堆积的物质财富，喧闹的都市生活，钟表式的分工，忙碌而刻板的日常生活。从前，人为自己的灵魂得救牺牲了尘世生活；现在，人为尘世生活又牺牲了自己的灵魂。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;好像经历了一次否定之否定，人们重新寻找自己的灵魂，不过，这一次不是到天国去寻找，而是到自己的内心深处，寻找那真实的独特的“自我”，那既不属于上帝也不属于他人的自己的灵魂。&lt;/p&gt;

&lt;!--excerpt_separator--&gt;

&lt;p&gt;对于尼采来说，真实的自我并非隐藏在个人天性中的既成之物，而是个人自我创造的产物，更确切地说，即是这自我创造过程本身。创造的过程就是赋予价值的过程，每一个自我创造必是独特的。这是尼采人生观的重要组成部分。在尼采看来，每一个人必须独立地探求人生意义，而对人生意义的真实领会与真实“自我”的发现根本就是同一回事。&lt;/p&gt;

&lt;p&gt;人人都有一个“自我”。一个人的知识脱不开“自我”界限。“无论我对人世的贪欲多么大，除了已经属于我的之外，我不能从事物中获得任何别的东西。”&lt;/p&gt;

&lt;p&gt;人人都有一个“自我”，然而，绝大多数人都不是在为他的“真实的自我”活着，而是在为“他们周围人们的头脑中形成并传达给她们的自我的幻象”而活着，这是一种“伪个人主义”。认识“自我”是一件最难的事。&lt;/p&gt;

&lt;p&gt;尼采认为，真实的“自我”往往隐藏在无意识之中的，而通常的认识方式，借助于语言，求之于思维，不但不能达到“自我”，反而歪曲了“自我”。社会的舆论和评价也干扰着我们的自我认识，使我们误解自己。例如，社会以成败论英雄，“成功往往给一个行为抹上存心善良的绚丽光彩，失败则给可敬的举动投下内疚的阴影。”结果，“动机和意图很少是足够清晰单纯的。”在舆论的迷雾中，人们把“自我”的幻影同真实的“自我”混为一谈，为这“自我”的幻影劳碌了一生。&lt;/p&gt;

&lt;p&gt;真实需要巨大的勇气，认识真实的“自我”也不例外。软弱的人往往有意无意地欺骗自己，忘掉那些不愉快的经历和体验。人忘掉他经历过的某些事情，有意地把它们逐出头脑…我们不断致力于这样的自我欺骗。由此造成虚假的自信。真正相信自己的人是很少的，有些人的自信不过是一种“有益的盲目”，似乎下意识地知道自己内心的空虚，避免去看透自己，以维持虚假的充实。尼采认为，真正的自信者必是有勇气正视自己的人，“不羞于自己的人”，而这样的自信也必定和对自己的怀疑及不满有着内在的联系。“他们所做的一切美好、优异、伟大之事，一开始都是反对居于他们内心的怀疑者的论据，用来说服和劝说这个怀疑者的，而为此就几乎需要天才了。这是伟大的自我不满者。”他们知道自己的弱点，为这弱点而苦恼，不肯毁于这弱点，于是奋起自强，反而有了令一般人吃惊的业绩。&lt;/p&gt;

&lt;p&gt;认识“自我”难，实现“自我”更难，而实现的困难又加重了认识的困难。最大的困难在于，一个人一旦认识了“自我”，就要对这“自我”负起责任，也就是实现这“自我”，而这必然要付出重大的代价。“每个人都是一个一次性的奇迹，每个人直到他的每块肌肉的运动都是他自己，只是他自己，而且，只要这样严格地贯彻他的唯一性，他就是美丽客观地，他就是像大自然的每个作品一样新奇而令人难以置信…”有些人（例如艺术家）强烈地意识到这个独特的“自我”，在自我创造的过程中实现了这个“自我”；而许多人的“自我”却是一种终未能实现的可能性，埋没在非本质的存在之中了。“有些人逃避他们的高级自我，因为高级自我是苛求的。”无条件地服从外来意志，例如宗教和国家，放弃自己的意志和责任，这是一种最轻松的处世方式。拒绝一种愿望总比调节一种愿望容易，放弃个性总比发展个性容易。尼采一再指出，懒惰和怯懦是妨碍人们实现“自我”的大地。&lt;/p&gt;

&lt;p&gt;人人都有一个“自我”，可是人人都不愿意别人表现出他们的“自我”，为此宁愿也牺牲掉自己的“自我”。尼采揭示了习惯势力的社会心理机制。在社会中，每个人个性的自由发展意味着某种形式的竞争，他人的创造要求自己做出新的创造，他人的优胜刺激着自己也要优胜。于是，为了自己能偷懒，就嫉恨别人的优秀，宁愿人人都保持在平庸的水平上。走阻力最小线路的懒惰心理造成了一种社会的惰性，成为阻碍个性发展的最大阻力。总之，非要千人一面，众口一词，才算是一个“好社会”，即人人可以心安理得的社会。敢于“走自己的路”的人，难免要受到诽谤和孤立了，这时他不但要付出最大的艰辛，而且要遭受最多的屈辱。有几人能“让人家去说”而不改变初衷呢？怯懦实在是懒惰的副产品，首先有多数人的懒惰而不求个人的独特，这多数的力量形成一条防止个人求优异的警戒线，然后才有了人言可畏的怯懦心理。&lt;/p&gt;

&lt;p&gt;结果，人们不是去发现“自我”、实现“自我”，而是逃避“自我”唯恐不及。逃避的方式就是劳作，那自早到晚刻板而无创造性的劳作。这种劳作“几乎耗尽了精力，从而排除了沉思、冥想、梦幻、忧愁、爱恋、憎恨，它始终把一个小目标树立在眼前，保持着容易的、守规矩的满足。一个让人们不断高强度劳作的社会是比较安全的，而安全现在被奉为最高的神明。”&lt;/p&gt;

&lt;p&gt;在现代工业社会里，片面的分工和紧张刻板的工作方式严重摧残个性，尼采对此是有清醒认识的。他已在指出，在现代，生命是患了病的，“病于违背人性的机器系统和机械主义，并于工人的‘非个人性’，病于’分工’的错误经济学”。人们现在已经羞于安静；长久的沉思几乎使人产生良心责备。人们手里拿着表思考，吃午饭时眼睛盯着商业新闻，人们像一个总是’可能耽误’什么事似的那样活着。”这种情形将会扼杀一切教养和高尚趣味。&lt;/p&gt;

&lt;p&gt;在个人与社会关系问题上，尼采认为，社会是机器和工具，个人才是目的。他认为，现代社会恰恰把这种关系颠倒了。&lt;/p&gt;

&lt;p&gt;在尼采那里，真实的“自我”有两层含义。在较低层次上，他是指隐藏在潜意识之中的个人的生命本能，种种无意识的欲望、情绪、情感和体验；在较高层次上，便是精神性的“自我”，它是个人自我创造的产物。不过，对于尼采来说，这两层含义并不矛盾，因为他一向把生命本能看作创造的动力和基础。&lt;/p&gt;

&lt;p&gt;尼采是一个直言不讳的个人主义者。他主张的个人主义不同于那种唯利是图、沽名钓誉的个人主义，真正的个人主义追求的既非财产，亦非浮名，而是真实的“自我”。长久以来，人类认为最重要的事情是发财，而不知道最重要的事情是生活。尼采式的个人主义，归结一句话，“成为你自己！”&lt;/p&gt;

&lt;p&gt;怎样才算成为了自己呢？当然，天生的气质，神经类型，智力禀赋，几乎跟随人一辈子，要在这些方面不是自己才难呢。然而，也并非所有人率直对待自己的天性，有的人要矫饰，扭曲，抱怨，但愿成了别人。尼采的意思可不是要每个人回到自己的天性、停留在天性上，他着眼的是后天的创造和发展。&lt;/p&gt;

&lt;p&gt;“成为你自己”首先是要忠实于自己，对自己的生存负责，真诚地寻求人生的意义。我们要充当这个人生的真正舵手，不让我们的生存等同于一个盲目的偶然。执著生命是没有意义的，不管如何执著，你终究要失去它。尼采要我们因此看开一些，不是执著生命本身，而是执著生命的意义。“成为你自己”，就是要居高临下于你的生命，做你的生命的主人，赋予你的生命以自己的意义。为自己生活，为自己思考，为自己写作，始终做一个真实的人，既非不关痛痒地对待生活和思想，也不作违心之事和违心之论。这就是忠实于自己。&lt;/p&gt;

&lt;p&gt;在“自我”与他人的关系上，“成为你自己”就是要有自己的独立性，不盲从和迷信他人。独立思考不仅使知识融会贯通，更是赋予知识以你的个性，是你“发现”了唯独属于你的真切新鲜的感受。&lt;/p&gt;

&lt;p&gt;个人是世界的中心，但这里的个人并非要拿世界来自利，反而是要向世界贡献一份他特有的光和热。人人都是太阳，由无数发光体组成的这世界岂非更绚丽多彩？相反，个人愈是雷同，社会就愈是缺少凝聚力，无个性的个体不能结合为整体。个人愈是独特，个性的差异愈是悬殊，由他们组成的社会有机体就愈是生气勃勃。最好每个人都“从自己形成着一些让别人看了愉快的东西，犹如一座美丽、幽静、封闭的花园，有高墙挡住马路上的风尘，但又敞开着迎客的大门”。独特，然后才有沟通。毫无特色的平庸之辈厮混在一起，只有无聊。“成为你自己”，开放出你的奇花异卉，展现出你的独特的美。万紫千红，群芳斗艳，每人都创造自己的美，每人都欣赏其他一切人所创造的各自的美，人人都是美的创造者和欣赏者，生活在这样的世界上多么赏心悦目。&lt;/p&gt;

&lt;p&gt;与传统逐利的自私和说教的无私相对的，尼采提倡一种“从强力的灵魂流出的完好的健康的自私”。“健康的自私”源于力量的丰裕，它强纳万物于自己。人格的缺陷到处都造成恶果；一种软弱、阴郁、死气沉沉、自我贬抑和自我否定的人格不再适合任何美好的事物，唯有坚强、成熟、沉着、坚定自立的心灵才能负此重任。&lt;/p&gt;

&lt;p&gt;这种自爱、自强、自尊的精神，非常典型地表现在对于侮蔑和痛苦的态度上。你受到了侮蔑，你不要为自己辩解，而宁肯负着玷污，只是为了不给卑劣的侮蔑者以阴险的快乐，使他能够说：“他真觉着这些事很重要呀！”&lt;/p&gt;

&lt;p&gt;你遭受了痛苦，你也不要向人诉说，以求同情，因为一个有独特个性的人，连他的痛苦也是独特的，深刻的，不易被人了解，别人的同情只会解除你的痛苦的个人性，使之降为平庸的烦恼，同时也就使你的人格遭到了贬值。&lt;/p&gt;
</description>
        
          <description>&lt;h2 id=&quot;section&quot;&gt;“自我”的发现&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;自中世纪的丧钟敲响以来，西方人的精神上似乎经历了两次重大发现：第一次是人的发现，第二次是“自我”的发现。文艺复兴时代，当神的虚幻光芒渐渐熄灭，人的太阳升起了，“做你自己想做的事！”，冻结了一千年的尘世生活解冻了，活动吧，创造吧，尽情地享受吧。后来，一种新的惘然若失之感在人们心中滋生。堆积的物质财富，喧闹的都市生活，钟表式的分工，忙碌而刻板的日常生活。从前，人为自己的灵魂得救牺牲了尘世生活；现在，人为尘世生活又牺牲了自己的灵魂。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Sun, 07 Feb 2016 00:00:00 +0800</pubDate>
        <link>/blog/ego-discovery/</link>
        <guid isPermaLink="true">/blog/ego-discovery/</guid>
        
        <category>哲学</category>
        
        <category>札记</category>
        
        
      </item>
      
    
      
      <item>
        <title>简明awki教程</title>
        <description>&lt;p&gt;&lt;em&gt;整理翻译 &lt;a href=&quot;http://www.hcs.harvard.edu/~dholland/computers/awk.html&quot;&gt;http://www.hcs.harvard.edu/~dholland/computers/awk.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;awk&quot;&gt;为什么选awk？&lt;/h3&gt;
&lt;p&gt;awk小巧、快速、简单。awk语言简练，像C，也像这篇文章。它用来处理文本文件，非常方便。&lt;/p&gt;

&lt;h3 id=&quot;awk-1&quot;&gt;awk能用来干嘛？&lt;/h3&gt;
&lt;p&gt;awk设计用来处理基于“列”构成的文本数据，例如表格。&lt;!--excerpt_separator--&gt;变量$1、$2..代表输入数据的第1、2..列。例如，要打印一个文件的第2列，你可以：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &amp;lt; filename &#39;{print $2}&#39;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这句是说“对于每一行，打印第2列”。同时还要打出第3列，你可以：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &amp;lt; filename &#39;{print $2,$3}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;输入分隔符&lt;/h3&gt;
&lt;p&gt;默认情况下，awk用空白符（空格、Tab）来分隔输入数据。你可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-F&lt;/code&gt;参数来制定分隔符。举个例子，打印Linux中每个用户的主目录，你可以：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &amp;lt; /etc/passwd -F: &#39;{print $6}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;passwd文件中，每个用户的各类信息是以冒号来分隔的，而第6个是用户主目录。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;数学运算&lt;/h3&gt;
&lt;p&gt;awk不强调变量的类型。变量根据被引用情况，要么是字符串，要么是数值。所有的数值变量都是浮点类型。以下实现华氏度转摄氏度的计算：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &#39;{print ($1-32)*(5/9)}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这句话将一直处理标准输入的数值，直到被终止。&lt;/p&gt;

&lt;p&gt;运算符和C语言中的使用差不多。相邻的字符串变量即可拼接，而&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;则总表示数值上的加法。因此：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo 5 4 | awk &#39;{print $1+$2}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出&lt;code class=&quot;highlighter-rouge&quot;&gt;9&lt;/code&gt;，而&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo 5 4 | awk &#39;{print $1 $2}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出&lt;code class=&quot;highlighter-rouge&quot;&gt;54&lt;/code&gt;，需要注意的是&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo 5 4 | awk &#39;{print $1,$2}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出&lt;code class=&quot;highlighter-rouge&quot;&gt;5 4&lt;/code&gt;（5和4之间有空格）。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;变量&lt;/h3&gt;
&lt;p&gt;awk有一些内建的变量，$1、$2已经提到。同样对初学者很有用的变量是NF，它给出总列数（这样的话，$NF就表示最后一列）。$0表示所有输入数据。&lt;/p&gt;

&lt;p&gt;你也可以创建变量，但不需要声明它们。未显式赋值的字符串变量初值为空，数值变量则为0。&lt;/p&gt;

&lt;p&gt;举个例子，下面这句打印出了每行数据的平均数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &#39;{tot=0; for(i=1;i&amp;lt;NF;i++) tot+=$i; print tot/NF}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;需要注意的是，这里$i获得每行的第i项数据，for循环则很像C语言。这里给tot赋值0是为了处理每行数据前的重置，不把上一行的处理结果带入计算中。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;语句块&lt;/h3&gt;
&lt;p&gt;若每行一个数据，如何计算所有数据的平均数呢？你可以这么做：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &#39;{tot+=$1; n+=1} END {print tot/n}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面两个语句之间的“END”表明紧随其后的语句块要在所有行处理结束之后才执行。类似的，如果语句块前出现条件语句，则当条件成立方才执行。如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &#39;$1==0 {print $2}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这句是说，当第1列数据为0时才打印第2列。还有，你也可以使用正则表达式：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &#39;/^test/ {print $2}&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当该行数据以test开头时，打印第2列。&lt;/p&gt;

&lt;p&gt;总之，语句块前如果没有任何表达式，那么它总要执行；存在条件且成立，那么它也执行；需要说明的是，没有特别干脆的方法能，能实现选择各语句块中的一个去执行。&lt;/p&gt;

&lt;p&gt;“BEGIN”同“END”一样，是个特殊的块语句执行条件，它指明在所有行处理前执行。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;其他语言结构&lt;/h3&gt;
&lt;p&gt;awk支持类似C语言的循环和条件语句：for，while，do／while，if和if／else。&lt;/p&gt;

&lt;h3 id=&quot;printf&quot;&gt;printf&lt;/h3&gt;
&lt;p&gt;awk中printf同C语言中功能相似。因此，它可以用来漂亮地输出和复杂地打印。前面的print会自动在输出的结果后加上换行；printf不会。下面的例子用来删除第1列：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;awk &#39;{for(i=2;i&amp;lt;=NF;i++) printf &quot;%s &quot;,$i;printf &quot;\n&quot;}&#39;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;配合其他工具&lt;/h3&gt;
&lt;p&gt;脚本语言的好处在于可以轻松配合其他工具使用。一些工具很容易通过管道使用awk进行后续处理。awk也多与sed一起组合使用，用于正则的匹配和替换。&lt;/p&gt;

&lt;p&gt;同sed，sort，paste等工具一起使用之后，awk在数据处理方面得心应手，在列表格式的数据库维护方面也相当不错。&lt;/p&gt;

&lt;p&gt;忠告，别用csh，用sh或ksh。&lt;/p&gt;

&lt;p&gt;如何查看你使用频率最高的linux命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;history | awk &#39;{CMD[$2]++;count++;} END {for(a in CMD) print CMD[a],CMD[a]/count*100&quot;%&quot;,a}&#39; | grep -v &quot;./&quot; | column -c3 -s &quot; &quot; -t | sort -nr | nl | head -n10  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;再说一些&lt;/h3&gt;
&lt;p&gt;这个教程相当简单、基础，awk其实可以做许多有用的事。man手册页中关于awk的部分是很好的参考。&lt;/p&gt;

</description>
        
          <description>&lt;p&gt;&lt;em&gt;整理翻译 &lt;a href=&quot;http://www.hcs.harvard.edu/~dholland/computers/awk.html&quot;&gt;http://www.hcs.harvard.edu/~dholland/computers/awk.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
        
        <pubDate>Thu, 20 Mar 2014 00:00:00 +0800</pubDate>
        <link>/blog/simple-awk-tutorial/</link>
        <guid isPermaLink="true">/blog/simple-awk-tutorial/</guid>
        
        <category>hack</category>
        
        
      </item>
      
    
      
      <item>
        <title>黑客格调</title>
        <description>&lt;p&gt;&lt;em&gt;翻译 &lt;a href=&quot;http://www.catb.org/esr/faqs/hacker-howto.html#style&quot;&gt;http://www.catb.org/esr/faqs/hacker-howto.html#style&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;再次强调，要成为一名黑客，你得有黑客的思维方式。当不面对电脑时，黑客也会做一些有益的事。虽然这些取代不了hacking，但是许多黑客都在做，并且认为这些同hacking的本质是相通的。&lt;/p&gt;

&lt;!--excerpt_separator--&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;学会写作。虽然一直以来给人的印象是，程序员不懂写作，但是出奇多的黑客都是好的写手、作家。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;读科幻小说。去参加科幻小说的书友会（很可能会在那儿碰到黑客朋友）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;试试某种武术运动。习武所需的某种心智训练在某程度上说与黑客所做的十分相似。当然啊，黑客们最爱的还是那些亚洲的徒手术，比如说：跆拳道，空手道，中国功夫，合气道，柔术等。击剑和剑术也有可观数量的追捧者。在某些法律允许的地区，自上世纪90代，气枪射击越来越受黑客的喜爱。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;学着禅修冥想。禅宗一直都是黑客的最爱（这无关宗教，重要的是你能从中获得些什么或是放开你已经固有的）。其他的方法也许有用，但要小心别选择那些让人妄想的修行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;培养聆听音乐的耳朵。学会欣赏某种类型的音乐。学着去演奏一种乐器，或者学会唱歌。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;痴迷双关语。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面列举的事情，你做过越多越能说明你是个天生的黑客坯子。为什么这些左右脑并用的技能如此重要？因为，黑客们既需擅长逻辑推理又能在片刻间跳出问题表面上的思考。&lt;/p&gt;

&lt;p&gt;工作如同玩乐般尽兴，玩乐如同工作般拼命。对于真正的黑客来说，工作与玩乐、科学与艺术间的界限消失不见，或者说，工作和玩乐融合成一种高层次、富于创造性的快事。同样，不要满足于你少得可怜的技能。尽管许多黑客认为自己只是程序员，但是他们在许多相关方面都很厉害——系统管理、网页设计、硬件故障排除等等。如果一个黑客是名系统管理员，那么他很可能也相当擅长写脚本和设计网页。黑客们从不半途而废，如果他们投身于某种技能，他们要做到最好。&lt;/p&gt;

&lt;p&gt;最后，别做这些事儿：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;别起那些愚蠢、浮夸的用户名和昵称。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;别在新闻组里跟别人胡搅蛮缠（其它地方也不要）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;别自称“网络黑客”，也别把时间浪费在这些人自称黑客的人身上。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;别写那些拼写出错、语法怪异的文章、邮件。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;做这些事只会让你沦为傻瓜。黑客们都有不错的记性，一旦你犯了这些错误，那可得花上好些年才能被再次接受。&lt;/p&gt;

&lt;p&gt;昵称的问题值得强调。试图用昵称来隐藏身份是cracker之类人的幼稚和愚蠢的行为。黑客们从不这么做，他们以自己所做所为而自豪，并希望能够属上真名。所以，如果你使用了愚蠢的昵称，别再用了。在黑客文化里，这会让你成为失败者。&lt;/p&gt;
</description>
        
          <description>&lt;p&gt;&lt;em&gt;翻译 &lt;a href=&quot;http://www.catb.org/esr/faqs/hacker-howto.html#style&quot;&gt;http://www.catb.org/esr/faqs/hacker-howto.html#style&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
        
        <pubDate>Sat, 23 Mar 2013 00:00:00 +0800</pubDate>
        <link>/blog/hacker'-styles/</link>
        <guid isPermaLink="true">/blog/hacker'-styles/</guid>
        
        <category>hack</category>
        
        
      </item>
      
    
      
      <item>
        <title>Eric S. Raymond: How to become a hacker?</title>
        <description>&lt;p&gt;&lt;strong&gt;This is my &lt;a href=&quot;http://www.catb.org/esr/faqs/hacker-howto.html&quot;&gt;Holy Bible&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
        
          <description>&lt;p&gt;&lt;strong&gt;This is my &lt;a href=&quot;http://www.catb.org/esr/faqs/hacker-howto.html&quot;&gt;Holy Bible&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
        
        <pubDate>Tue, 01 Jan 2013 00:00:00 +0800</pubDate>
        <link>/blog/how-to-become-a-hacker/</link>
        <guid isPermaLink="true">/blog/how-to-become-a-hacker/</guid>
        
        <category>hack</category>
        
        
      </item>
      
    
  </channel>
</rss>
